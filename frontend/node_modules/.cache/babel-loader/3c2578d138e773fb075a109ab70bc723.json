{"ast":null,"code":"var _jsxFileName = \"/home/anand/Desktop/counter_app/src/components/counter.jsx\";\nimport React, { Component, useMemo, useState, useEffect } from 'react';\nimport Table from \"./Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 1,\n      address: {\n        street: ''\n      }\n    };\n    this.columns = useMemo(() => [{\n      // first group - TV Show\n      Header: \"TV Show\",\n      // First group columns\n      columns: [{\n        Header: \"Name\",\n        accessor: \"show.name\"\n      }, {\n        Header: \"Type\",\n        accessor: \"show.type\"\n      }]\n    }, {\n      // Second group - Details\n      Header: \"Details\",\n      // Second group columns\n      columns: [{\n        Header: \"Language\",\n        accessor: \"show.language\"\n      }, {\n        Header: \"Genre(s)\",\n        accessor: \"show.genres\"\n      }, {\n        Header: \"Runtime\",\n        accessor: \"show.runtime\"\n      }, {\n        Header: \"Status\",\n        accessor: \"show.status\"\n      }]\n    }], []);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n  formatCount() {\n    return this.state.count === 0 ? 'Zero' : this.state.count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/anand/Desktop/counter_app/src/components/counter.jsx"],"names":["React","Component","useMemo","useState","useEffect","Table","Counter","state","count","address","street","columns","Header","accessor","render","formatCount","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6CC,SAA7C,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,OAAO,EAAG;AACNC,QAAAA,MAAM,EAAG;AADH;AAFN,KADoB;AAAA,SAW7BC,OAX6B,GAWnBT,OAAO,CAChB,MAAM,CACJ;AACE;AACAU,MAAAA,MAAM,EAAE,SAFV;AAGE;AACAD,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADO,EAKP;AACED,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OALO;AAJX,KADI,EAgBJ;AACE;AACAD,MAAAA,MAAM,EAAE,SAFV;AAGE;AACAD,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADO,EAKP;AACED,QAAAA,MAAM,EAAE,UADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OALO,EASP;AACED,QAAAA,MAAM,EAAE,SADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OATO,EAaP;AACED,QAAAA,MAAM,EAAE,QADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAbO;AAJX,KAhBI,CADU,EAyChB,EAzCgB,CAXY;AAAA;;AAwD5BC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,8BACH;AAAA,kBAAO,KAAKC,WAAL;AAAP;AAAA;AAAA;AAAA;AAAA,cADG,eAEH,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEJ,OAAhB;AAAyB,QAAA,IAAI,EAAEK;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH;;AACDD,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKR,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAwB,MAAxB,GAAiC,KAAKD,KAAL,CAAWC,KAAnD;AACH;;AAjE2B;;AAoEhC,eAAeF,OAAf","sourcesContent":["import React, { Component,useMemo, useState, useEffect  } from 'react';\nimport Table from \"./Table\";\nclass Counter extends Component {\n    state = { \n        count: 1,\n        address : {\n            street : ''\n        }\n    }\n     /* \n    - Columns is a simple array right now, but it will contain some logic later on. It is recommended by react-table to memoize the columns data\n    - Here in this example, we have grouped our columns into two headers. react-table is flexible enough to create grouped table headers\n  */\n   columns = useMemo(\n    () => [\n      {\n        // first group - TV Show\n        Header: \"TV Show\",\n        // First group columns\n        columns: [\n          {\n            Header: \"Name\",\n            accessor: \"show.name\"\n          },\n          {\n            Header: \"Type\",\n            accessor: \"show.type\"\n          }\n        ]\n      },\n      {\n        // Second group - Details\n        Header: \"Details\",\n        // Second group columns\n        columns: [\n          {\n            Header: \"Language\",\n            accessor: \"show.language\"\n          },\n          {\n            Header: \"Genre(s)\",\n            accessor: \"show.genres\"\n          },\n          {\n            Header: \"Runtime\",\n            accessor: \"show.runtime\"\n          },\n          {\n            Header: \"Status\",\n            accessor: \"show.status\"\n          }\n        ]\n      }\n    ],\n    []\n  );\n\n\n    render() { \n        return <div>\n            <span>{this.formatCount()}</span>\n            <Table columns={columns} data={data} />\n            <button>Increment </button>\n            </div>;\n    }\n    formatCount() {\n        return this.state.count === 0? 'Zero' : this.state.count;\n    }\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}